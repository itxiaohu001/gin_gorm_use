basePath: /
definitions:
  dto.DeleteUserResponse:
    properties:
      message:
        type: string
    type: object
  dto.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  dto.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
    type: object
  dto.RegisterResponse:
    properties:
      message:
        type: string
    type: object
  dto.UpdateRoleInput:
    properties:
      role:
        type: string
    required:
    - role
    type: object
  dto.UpdateRoleResponse:
    properties:
      message:
        type: string
    type: object
  dto.UserRegisterInput:
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - password
    - role
    - username
    type: object
  models.StorageType:
    enum:
    - local
    - minio
    type: string
    x-enum-varnames:
    - StorageTypeLocal
    - StorageTypeMinio
  storage.FileInfo:
    properties:
      filename:
        type: string
      id:
        type: string
      size:
        type: integer
      storageType:
        $ref: '#/definitions/models.StorageType'
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 这是一个用户认证系统的 API 文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 用户认证 API
  version: "1.0"
paths:
  /files:
    get:
      description: 获取当前用户的所有文件列表
      produces:
      - application/json
      responses:
        "200":
          description: 文件列表
          schema:
            items:
              $ref: '#/definitions/storage.FileInfo'
            type: array
        "500":
          description: 获取文件列表失败
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 获取文件列表
      tags:
      - files
  /files/{fileID}:
    delete:
      description: 从服务器删除指定的文件
      parameters:
      - description: 文件ID
        in: path
        name: fileID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 文件删除成功
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 文件不存在
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 删除文件失败
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 删除文件
      tags:
      - files
  /files/download/{fileID}:
    get:
      description: 从服务器下载指定的文件
      parameters:
      - description: 文件ID
        in: path
        name: fileID
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: 文件内容
          schema:
            type: file
        "404":
          description: 文件不存在
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 下载文件
      tags:
      - files
  /files/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传一个文件到服务器
      parameters:
      - description: 要上传的文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 文件上传成功
          schema:
            $ref: '#/definitions/storage.FileInfo'
        "400":
          description: 无效的文件
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 文件上传失败
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 上传文件
      tags:
      - files
  /login:
    post:
      consumes:
      - application/json
      description: 验证用户凭证并返回认证令牌
      parameters:
      - description: 用户登录凭证
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/dto.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: 用户登录
      tags:
      - 用户管理
  /register:
    post:
      consumes:
      - application/json
      description: 创建一个新用户账号
      parameters:
      - description: 用户注册信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: 注册新用户
      tags:
      - 用户管理
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: 根据用户ID删除指定用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DeleteUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: 删除用户
      tags:
      - 用户管理
  /users/{id}/role:
    put:
      consumes:
      - application/json
      description: 根据用户ID更新指定用户的角色
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: string
      - description: 新的用户角色
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRoleInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateRoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: 更新用户角色
      tags:
      - 用户管理
schemes:
- http
swagger: "2.0"
